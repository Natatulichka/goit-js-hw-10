{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//   },\n// };\ndocument.addEventListener('DOMContentLoaded', function () {\n  let userSelectedDate;\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      const currentDate = new Date();\n      if (userSelectedDate < currentDate) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Please choose a date in the future',\n        });\n        document.getElementById('start-btn').disabled = true;\n      } else {\n        document.getElementById('start-btn').disabled = false;\n      }\n    },\n  };\n  flatpickr('#datetime-picker', options);\n  document.getElementById('start-btn').addEventListener('click', function () {\n    this.disabled = true;\n    document.getElementById('datetime-picker').disabled = true;\n    const interval = setInterval(function () {\n      const currentDate = new Date();\n      const timeDiff = userSelectedDate - currentDate;\n      if (timeDiff <= 0) {\n        clearInterval(interval);\n        iziToast.success({\n          title: 'Success',\n          message: 'Countdown timer has ended',\n        });\n        document.getElementById('start-btn').disabled = false;\n        document.getElementById('datetime-picker').disabled = false;\n      } else {\n        const { days, hours, minutes, seconds } = convertMs(timeDiff);\n        document.getElementById('timer').innerText = `${addLeadingZero(\n          days\n        )} Days ${addLeadingZero(hours)} Hours ${addLeadingZero(\n          minutes\n        )} Minutes ${addLeadingZero(seconds)} Seconds`;\n      }\n    }, 1000);\n  });\n});\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["userSelectedDate","flatpickr","selectedDates","iziToast","interval","timeDiff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAWA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,IAAIA,EAoBJC,EAAU,mBAnBM,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,EADgB,IAAI,MAEtBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACnB,CAAS,EACD,SAAS,eAAe,WAAW,EAAE,SAAW,IAEhD,SAAS,eAAe,WAAW,EAAE,SAAW,EAEnD,CACL,CACuC,EACrC,SAAS,eAAe,WAAW,EAAE,iBAAiB,QAAS,UAAY,CACzE,KAAK,SAAW,GAChB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtD,MAAMC,EAAW,YAAY,UAAY,CAEvC,MAAMC,EAAWL,EADG,IAAI,KAExB,GAAIK,GAAY,EACd,cAAcD,CAAQ,EACtBD,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,2BACnB,CAAS,EACD,SAAS,eAAe,WAAW,EAAE,SAAW,GAChD,SAAS,eAAe,iBAAiB,EAAE,SAAW,OACjD,CACL,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5D,SAAS,eAAe,OAAO,EAAE,UAAY,GAAGM,EAC9CL,CACD,CAAA,SAASK,EAAeJ,CAAK,CAAC,UAAUI,EACvCH,CACD,CAAA,YAAYG,EAAeF,CAAO,CAAC,UACrC,CACF,EAAE,GAAI,CACX,CAAG,CACH,CAAC,EACD,SAASC,EAAUE,EAAI,CAKrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASE,EAAeE,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}