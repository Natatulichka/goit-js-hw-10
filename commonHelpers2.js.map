{"version":3,"file":"commonHelpers2.js","sources":["../src/img/resolve-icon.svg","../src/js/2-snackbar.js"],"sourcesContent":["export default \"__VITE_ASSET__43d540d1__\"","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'modern-normalize/modern-normalize.css';\nimport imageUrl from '../img/alert-icon.svg';\nimport resolveImageUrl from '../img/resolve-icon.svg';\n// createPromise(delay, state) { return new Promise((resolve, reject) => {\n//      if (state === 'fulfilled') { setTimeout(() => { resolve(delay); }, delay); } else {\n//         setTimeout(() => {\n//             reject(delay); }, delay); } }); }\n//  document.querySelector('form').addEventListener('submit', function(event) {\n//     event.preventDefault();\n//     const delay = parseInt(document.querySelector('input[name=\"delay\"]').value);\n//     const state = document.querySelector('input[name=\"state\"]:checked').value;\n//     createPromise(delay, state).then((delay) => {\n//         iziToast.success({\n//             title: 'Success', message: `Fulfilled promise in ${delay}ms` });\n//         }) .catch((delay) => {\n//             iziToast.error({\n//         title: 'Error', message: `Rejected promise in ${delay}ms`\n//     }); }); });\nconst inputForm = document.querySelector('.form');\ninputForm.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(e) {\n  e.preventDefault();\n\n  const delay = e.target.delay.value;\n  const status = e.target.state.value;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (status === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(delay => {\n      iziToast.success({\n        title: 'OK',\n        message: `Fulfilled promise in ${delay}ms`,\n        messageSize: '16',\n        messageColor: '#fff',\n        backgroundColor: '#59a10d',\n        position: 'topRight',\n        close: true,\n        closeOnEscape: true,\n        closeOnClick: true,\n        progressBar: true,\n        progressBarColor: '#326101',\n        iconColor: '#fff',\n        iconUrl: resolveImageUrl,\n        theme: 'dark',\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: 'Error',\n        message: `Rejected promise in ${delay}ms`,\n        messageSize: '16',\n        messageColor: '#fff',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        close: true,\n        closeOnEscape: true,\n        closeOnClick: true,\n        progressBar: true,\n        progressBarColor: '#ffbebe',\n        iconUrl: imageUrl,\n        theme: 'dark',\n      });\n    });\n\n  console.log(promise);\n}\n"],"names":["resolveImageUrl","inputForm","promiseGenerator","e","delay","status","promise","resolve","reject","iziToast","imageUrl"],"mappings":"wJAAA,MAAeA,EAAA,kDCoBTC,EAAY,SAAS,cAAc,OAAO,EAChDA,EAAU,iBAAiB,SAAUC,CAAgB,EAErD,SAASA,EAAiBC,EAAG,CAC3BA,EAAE,eAAc,EAEhB,MAAMC,EAAQD,EAAE,OAAO,MAAM,MACvBE,EAASF,EAAE,OAAO,MAAM,MAExBG,EAAU,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXH,IAAW,YACbE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAEDE,EACG,KAAKF,GAAS,CACbK,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,wBAAwBL,CAAK,KACtC,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,MAAO,GACP,cAAe,GACf,aAAc,GACd,YAAa,GACb,iBAAkB,UAClB,UAAW,OACX,QAASJ,EACT,MAAO,MACf,CAAO,CACP,CAAK,EACA,MAAMI,GAAS,CACdK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uBAAuBL,CAAK,KACrC,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,MAAO,GACP,cAAe,GACf,aAAc,GACd,YAAa,GACb,iBAAkB,UAClB,QAASM,EACT,MAAO,MACf,CAAO,CACP,CAAK,EAEH,QAAQ,IAAIJ,CAAO,CACrB"}